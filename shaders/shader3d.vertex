attribute vec3 position;
attribute vec3 color;
attribute vec3 normal;

uniform mat4 clipTransformation;
uniform mat4 worldTransformation;
uniform mat4 viewTransformation;

uniform vec3 directionalLight1InverseDirection;
uniform vec3 directionalLight1Intensity;
uniform vec3 directionalLight2InverseDirection;
uniform vec3 directionalLight2Intensity;
uniform vec3 ambientLightIntensity;

varying vec3 sharedColor;

void main() {
  gl_Position = clipTransformation*viewTransformation*worldTransformation*vec4(position, 1.0);
  sharedColor = color;

  vec4 viewSpaceNormal = normalize(viewTransformation * worldTransformation * vec4(normal, 0));
  
  float amplication1 = dot(vec3(viewSpaceNormal), directionalLight1InverseDirection);
  amplication1 = clamp(amplication1, 0.0, 1.0);
  float amplication2 = dot(vec3(viewSpaceNormal), directionalLight2InverseDirection);
  amplication2 = clamp(amplication2, 0.0, 1.0);
  
  sharedColor = color*directionalLight1Intensity*amplication1;
  sharedColor += color*directionalLight2Intensity*amplication2;
  sharedColor += color*ambientLightIntensity;
}
