attribute vec3 position;
attribute vec3 color;
attribute vec3 normal;

uniform mat4 clipTransformation;
uniform mat4 worldTransformation;
uniform mat4 viewTransformation;

uniform vec3 directionalLightInverseDirection;
uniform vec3 directionalLightIntensity;
uniform vec3 ambientLightIntensity;

varying vec3 sharedColor;

void main() {
  gl_Position = clipTransformation*viewTransformation*worldTransformation*vec4(position, 1.0);
  sharedColor = color;

  vec4 viewSpaceNormal = normalize(viewTransformation * worldTransformation * vec4(normal, 0));
  float amplication = dot(vec3(viewSpaceNormal), directionalLightInverseDirection);
  amplication = clamp(amplication, 0.0, 1.0);
  sharedColor = color*directionalLightIntensity*amplication + color*ambientLightIntensity;
}
